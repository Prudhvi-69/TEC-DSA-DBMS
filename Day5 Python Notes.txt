

function show(x) // 
    if x > 5
        show(x / 2)  // 
        print x - 1   
        show(x / 3) //
    else
        print x + 2  

Call: show(20)


7 9 5 19 5 5 4







---


function flip(x)  // 
    if x > 1  // 5>1, 3>1,  1>1
        print x  
        flip(x - 2)   // 5, (5-2), (3-2)
        print x
    else
        print x  

Call: flip(5)

5 3 1 3 5













---



function blast(n)  // 
    if n > 2
        blast(n - 1)  // 
        blast(n - 3)  // 
        print n  
    else
        print n + 1   

Call: blast(6)


3 1 3 2 4 3 5 3 1 3 6 










---

function magic(x)  // 
    if x > 3
        magic(x - 2)  //
        print x  
    else
        print x * 2

Call: magic(7)  

6 5 7












---


function spark(n) // 
    if n > 1
        spark(n - 1)  // 
        print n 
        spark(n - 2)  // 
    else
        print n

Call: spark(3)

1 2 0 3 1











--

function mirror(x)   // 
    if x > 0
        print x  
        mirror(x - 1) // 
        print x
    else
        print "End"

Call: mirror(5)


5 4 3 2 1 "End" 1 2 3 4 5

function mirror(x)   // 5, 4, 3, 2, 1
    if x > 0
        mirror(x - 1)  // 5, 4, 3, 2
        print x 
        mirror(x - 1)  // 4, 2, 1 
    else
        print "End"

Call: mirror(5)

End 1 End 2 End 1 End 3 End 1 End 2 End 1 End  4 End 1 End 2 

(63 values in output)




--







function zap(n)  //  
    if n > 1
        zap(n / 2) // 
        print n
        zap(n - 1) // 
    else
        print n + 1

Call: zap(4)


2 2 2 4 2 3 2 2 2




function fizzbuzz(n)   // 
    if n % 3 == 0 and n > 0 
        print "Fizz"
        fizzbuzz(n - 1)						// 
    elif n % 5 == 0 and n > 0
        print "Buzz"
        fizzbuzz(n - 1)					//  
    else if n > 0
        fizzbuzz(n - 1)				// 
        print n

Call: fizzbuzz(6)

Fizz Buzz Fizz 1 2 4 







function clone(x)  // 
    if x > 1
        clone(x - 2)  // 
        print x * 2    
        clone(x - 1) //  
    else
        print x

Call: clone(4)

0 4 1 8 1 6 0 4 1 











function sakura(n)  // 
    if n > 0
        sakura(n - 1) // 
        print n + 3
        sakura(n - 2) // 
    else
        print 0

Call: sakura(5)

0 4 0 5 0 6 0 4 0 7 0 4 0 5 0 8 0 4 0 5 0 6 0 4 0 











function pulse(x)  // 
    if x > 2
        pulse(x - 2) // 
        print x
    else
        print x - 1

Call: pulse(5)

0 3 5













function echo(n)  //  
    if n > 0 
        print n  
        echo(n - 1) // 
        echo(n - 2) //  
    else
        print "drop"

Call: echo(4)

4 3 2 1 drop drop drop 1 drop drop 2 1 drop drop drop 













function grow(power) // 1 
    if power < 10
        print power
        grow(power + 3)
        print power + 1
    else
        print "Limit"

Call: grow(1)

1 4 7 Limit 8 5 2












function maze(n)   // 
    if n % 2 == 0 and n > 0
        maze(n - 1)
        print n
    elif n > 0
        maze(n - 2)  //  
        print n
    else
        print "Exit"

Call: maze(5)

Exit 1 3 5





















🐍
Arr = [ 11 47 58 69 12 106 ]  = 6 

def reverse(Arr, ind): // 0 1 2 3 4 5 6
	if ind == len(Arr):
		return 
	reverse(Arr,ind+1)  // 0 1 2 3 4 5 
	print(Arr[ind], end=" ")


reverse(Arr,0)

Arr = [11 47 58 69 12 106]
			0    1   2   3   4    5
			           R	 L

def reverse(Arr, left, right): 
	if left >= right:   #3>2
		print(Arr)
		return
	Arr[left], Arr[right] = Arr[right], Arr[left]
 	reverse(Arr, left+1, right-1)


reverse(Arr, 0, len(Arr)-1)
print(Arr)


















function tsukuyomi(x)
    if x > 1
        tsukuyomi(x // 2)
        print x
        tsukuyomi(x // 2 - 1)
    else
        print x

Call: tsukuyomi(6)


def reverse(Arr, left, right): 
	if left >= right:   #3>2
		print(Arr)
		return
	Arr[left], Arr[right] = Arr[right], Arr[left]
 	reverse(Arr, left+1, right-1)

reverse(Arr, 0, len(Arr)-1)
print(Arr)













def calculate(steps):
	if steps == 1 || steps == 2:
		return steps
	elif steps<=0:	
		return "Invalid"
	else:
		s0, s1, s2= 1, 1, 2
		for i in range (3,steps+1): // 3,4,5
			res = s2 + s1 + s0   // 24
			s0 = s1  // 7  
			s1 = s2	// 13
			s2 = res  // 24
		return res



4 -> 7
5 -> 13
6 -> 










def add(a,b):  //2,3 ---  3,2 ---  4,1 ----   5,0
	if b==0:
		print(a)  // 5 
		return 
	add(a+1,b-1)  // 3,2,, 4,1,, 5,0

add(2,3)




def sub(a,b):  //2,3,,, 1,2,,, 0,1.... -1,0
	if b==0:
		print(a)  //  
		return 
	sb(a-1,b-1)  // 2,3.... 1,2,,,,0,1,,,,, -1,0


def mul(a,b):   
	if b==0:
		print(a)
		return
	return a+mul(a,b-1)     

def div(a,b):
	if b==0: 
		return;
	elif a<b:
		print(a)
		return
	return 1+div(a-b,b)







def calculate(a,b,c):
	+
		return sum
	- 
		return diff
	* 
		return prod
	/
		return quotient
	%
		return remainder

calculate(6,9,"+");


