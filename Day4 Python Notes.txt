arr = [12 14 17 19 23 27 29 60]
target = int(input())
flag = 0
for i in range(len(arr)):
	if arr[i] == target:
		flag = 1
		print(f"Element found at {i}")
		break
if flag==0:
	print("Element not found")

üêç
def Binary(Arr, target):
	left , right=  0, len(Arr)-1
	while left <= right:
		mid = (left + right ) // 
 # mid = left + (right - left) //			
		if Arr[mid] == target:
			if Arr[mid] == Arr[mid-1]:    
				f1 = mid-1
				f2 = mid
			elif Arr[mid] == Arr[mid+1]:
				f1 = mid
				f2 = mid+1
			print(f"1st occurance Found at {f1} 2nd occurance at {f2}")
			return
		elif target < Arr[mid]:
			right = mid - 1
		else:
			left = mid + 1
	print("Not found......ü•≤")
Arr = [1 2 4 55 69 450 555 555 2300 4444]   
target = 555
Binary(Arr,target)















L = 0
R = -1 || len(arr)-1
M = 1

def Linear(self,A):
	










Mountain Array 

			45
      22      12
  23             
10					

[10 23 22 45 12] 
False

Arr = [10 22 23 45 12]  -> True
i ,flag= 0
while True:
	if Arr[i] < Arr[i+1]:   // 10 23 22 45 12  -> False
		i+=1
	else: 
		peak = Arr[i]  //23
		break

while True:
	if Arr[i] > Arr[i+1]:	
		i+=1
	else:	
		flag = 1	
		break

if flag==0:
	print("Mountain Array with the Peak value ",peak)
else:
	print("Not a Mountain Array")









Find the SquareROot value of any integer value and return only the integer part of it and ignore the floating point value.
(If you can think of a way to do it with Binary Search, you can do it.........................................................................................)

Example: 
Input : 15
Ouput : Original value : 3.9____
				Intijar Valyu :    3






def sqrt(n):
	low = 0
	high = n
	ans = 0
	while low <= high:
		mid = (low+high)//2
		if mid*mid == n:
			ans=mid   // return mid 
		elif mid*mid < n:
			ans = mid
			low = mid+1
		else:
			high = mid-1
	print(ans)  // return ans












arr = []


arr.sort() // ascending
arr.sort(reverse=true)  

// descending order



















